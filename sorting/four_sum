//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine().trim());

        while (tc-- > 0) {
            String[] nk = br.readLine().trim().split(" ");
            int n = Integer.parseInt(nk[0]);
            int k = Integer.parseInt(nk[1]);

            String[] str = br.readLine().trim().split(" ");
            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = Integer.parseInt(str[i]);
            }

            Solution sln = new Solution();
            ArrayList<ArrayList<Integer>> ans = sln.fourSum(a, k);
            for (ArrayList<Integer> v : ans) {
                for (int u : v) {
                    System.out.print(u + " ");
                }
                System.out.print("$");
            }
            if (ans.isEmpty()) {
                System.out.print(-1);
            }
            System.out.println();
        }
    }
}
// } Driver Code Ends


// User function Template for Java

// arr[] : int input array of integers
// k : the quadruple sum required

class Solution {
     public ArrayList<ArrayList<Integer>> fourSum(int[] arr, int add) {
        // code here
          Arrays.sort(arr);
        int n = arr.length;
         ArrayList<ArrayList<Integer>> z=new ArrayList<>();
         ArrayList<ArrayList<Integer>> y=new ArrayList<>();
        int i=0;
        int j=i+1;
        int sum=0;
        for(i=0;i<n;i++){
            for(j=i+1;j<n;j++){
                int k=j+1;
             int l=n-1;
                while(k<l){
                  sum=arr[i]+arr[j]+arr[k]+arr[l];
                  if(sum<add){
                      k++;
                  }
                  else if(sum>add){
                      l--;
                  }
                  else if(sum==add){
                       ArrayList<Integer> b= new ArrayList<>();
                        b.add(arr[i]);
                        b.add(arr[j]);
                        b.add(arr[k]);
                        b.add(arr[l]);
                        k++;
                        l= n-1;
                        z.add(b);
                  }
            }
        }
    }
    for(ArrayList<Integer> q : z){
        if(!y.contains(q)){
            y.add(q);
        }
    }
    return y;
    }
}

